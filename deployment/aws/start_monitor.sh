#!/bin/bash

# Binance Portfolio Monitor - Start Script
# Spou≈°t√≠ aplikaci pomoc√≠ screen utility

# Nastaven√≠ barev pro v√Ωstup
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# N√°zev screen session
SCREEN_NAME="monitor"

# Pracovn√≠ adres√°≈ô (upravte podle pot≈ôeby)
WORK_DIR="/home/ec2-user/binance-monitor"

echo -e "${GREEN}üöÄ Binance Portfolio Monitor - Spou≈°tƒõƒç${NC}"
echo "======================================="

# Kontrola, jestli u≈æ bƒõ≈æ√≠ screen session
if screen -list | grep -q "\.${SCREEN_NAME}"; then
    echo -e "${YELLOW}‚ö†Ô∏è  Monitor ji≈æ bƒõ≈æ√≠ v screen session '${SCREEN_NAME}'${NC}"
    echo "Pro p≈ôipojen√≠ pou≈æijte: screen -r ${SCREEN_NAME}"
    echo "Pro zastaven√≠: p≈ôipojte se a stisknƒõte Ctrl+C"
    exit 1
fi

# Kontrola pracovn√≠ho adres√°≈ôe
if [ ! -d "$WORK_DIR" ]; then
    echo -e "${RED}‚ùå Pracovn√≠ adres√°≈ô neexistuje: $WORK_DIR${NC}"
    echo "Upravte promƒõnnou WORK_DIR v tomto scriptu"
    exit 1
fi

cd "$WORK_DIR"

# Kontrola Python instalace
if ! command -v python3.9 &> /dev/null; then
    echo -e "${RED}‚ùå Python 3.9 nen√≠ nainstalov√°n${NC}"
    echo "Nainstalujte pomoc√≠: sudo yum install python3.9"
    exit 1
fi

# Kontrola virtu√°ln√≠ho prost≈ôed√≠
if [ -d "venv" ]; then
    echo -e "${GREEN}‚úÖ Nalezeno virtu√°ln√≠ prost≈ôed√≠${NC}"
    PYTHON_CMD="venv/bin/python"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Virtu√°ln√≠ prost≈ôed√≠ nenalezeno, pou≈æ√≠v√°m syst√©mov√Ω Python${NC}"
    PYTHON_CMD="python3.9"
fi

# Kontrola requirements
if [ ! -f "requirements.txt" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Soubor requirements.txt nenalezen${NC}"
fi

# Kontrola .env souboru
if [ ! -f ".env" ]; then
    echo -e "${RED}‚ùå Soubor .env nenalezen${NC}"
    echo "Vytvo≈ôte jej pomoc√≠: cp deployment/aws/.env.example .env"
    echo "A vypl≈àte sv√© √∫daje"
    exit 1
fi

# Vytvo≈ôen√≠ adres√°≈ôe pro logy
mkdir -p logs

# Informace o spu≈°tƒõn√≠
echo -e "\n${YELLOW}üìã Konfigurace:${NC}"
echo "   Screen session: ${SCREEN_NAME}"
echo "   Pracovn√≠ adres√°≈ô: ${WORK_DIR}"
echo "   Python: ${PYTHON_CMD}"
echo "   Logy: ${WORK_DIR}/logs/"

# Spu≈°tƒõn√≠ v screen session
echo -e "\n${GREEN}üèÉ Spou≈°t√≠m monitor...${NC}"

screen -dmS ${SCREEN_NAME} bash -c "
    cd ${WORK_DIR}
    source .env
    export PYTHONPATH=${WORK_DIR}
    echo 'üöÄ Spou≈°t√≠m Binance Portfolio Monitor...'
    echo 'Pro ukonƒçen√≠ stisknƒõte Ctrl+C'
    echo ''
    ${PYTHON_CMD} deployment/aws/run_forever.py
"

# ƒåek√°n√≠ na start
sleep 2

# Kontrola, jestli session bƒõ≈æ√≠
if screen -list | grep -q "\.${SCREEN_NAME}"; then
    echo -e "\n${GREEN}‚úÖ Monitor √∫spƒõ≈°nƒõ spu≈°tƒõn!${NC}"
    echo ""
    echo -e "${YELLOW}üìå U≈æiteƒçn√© p≈ô√≠kazy:${NC}"
    echo "   P≈ôipojen√≠ k monitoru:  screen -r ${SCREEN_NAME}"
    echo "   Odpojen√≠ (bƒõ≈æ√≠ d√°l):   Ctrl+A, pak D"
    echo "   Zobrazen√≠ log≈Ø:        tail -f logs/continuous_runner.log"
    echo "   Kontrola dashboardu:   curl http://localhost:8000"
    echo ""
    echo -e "${GREEN}üåê Dashboard bƒõ≈æ√≠ na: http://localhost:8000${NC}"
else
    echo -e "${RED}‚ùå Nepoda≈ôilo se spustit monitor${NC}"
    echo "Zkontrolujte logy pro v√≠ce informac√≠"
    exit 1
fi